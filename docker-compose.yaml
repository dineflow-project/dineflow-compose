version: "3.7"

services:
  # frontend --------------------------------------------------
  frontend:
    container_name: frontend
    build:
      context: ../dineflow-frontend
      dockerfile: ../dineflow-frontend/api.Dockerfile
    ports:
      - "3000:3000"
    networks:
      - dineflow_network
    restart: on-failure

  # api gateway --------------------------------------------------
  api-gateway:
    container_name: api-gateway
    build:
      context: ../dineflow-api-gateway
      dockerfile: ../dineflow-api-gateway/api.Dockerfile
    ports:
      - "8000:8000"
    networks:
      - dineflow_network
    env_file:
      - ../dineflow-api-gateway/.env
    restart: on-failure
    
  user_db:
    container_name: "user_service_db"
    image: mongo
    networks:
      - dineflow_network
    ports:
      - "27018:27017"
    env_file:
      - ../dineflow-api-gateway/.env
    volumes:
      - user_database:/data/db
    restart: on-failure

  # menu service --------------------------------------------------
  menu_db:
    container_name: "menu_services_db"
    hostname: "menu_services_db"
    build:
      context: ../dineflow-menu-service
      dockerfile: ../dineflow-menu-service/db.Dockerfile
    networks:
      - dineflow_network
    ports:
      - "3306:3306"
    env_file:
      - ../dineflow-menu-service/.env

    volumes:
      - menu_database:/var/lib/mysql
    restart: on-failure
    
  menu_api:
    container_name: "menu_services_api"
    build:
      context: ../dineflow-menu-service
      dockerfile: ../dineflow-menu-service/api.Dockerfile
    networks:
      - dineflow_network
    expose:
      - 8090
    depends_on:
      - menu_db
    env_file:
          - ../dineflow-menu-service/.env
    volumes:
      - menu_api:/usr/src/app/
    restart: on-failure

  # noti service --------------------------------------------------
  noti_mongodb:
    container_name: "noti_services_mongodb"
    image: mongo
    networks:
      - dineflow_network
    ports:
      - "27017:27017"
    env_file:
      - ../dineflow-notification-service/.env
    volumes:
      - noti_mongodb:/data/db
    restart: on-failure
    
  noti_rabbit:
    container_name: "noti_services_rabbitmq"
    image: rabbitmq:management
    networks:
      - dineflow_network
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - ../dineflow-notification-service/.env
    volumes:
      - noti_rabbitmq:/var/lib/rabbitmq
    restart: on-failure
    
  noti_api:
    container_name: "noti_services_api"
    build:
      context: ../dineflow-notification-service
      dockerfile: ../dineflow-notification-service/api.Dockerfile
    expose:
      - 8093
    networks:
      - dineflow_network
    depends_on:
      - noti_mongodb
      - noti_rabbit
    env_file:
      - ../dineflow-notification-service/.env
    restart: on-failure

  # order service --------------------------------------------------
  order_api:
    container_name: "order_services_api"
    build:
      context: ../dineflow-order-service
      dockerfile: ../dineflow-order-service/api.Dockerfile 
    expose:
      - 8080
    networks:
      - dineflow_network
    env_file:
      - ../dineflow-order-service/.env
    restart: on-failure
    

  order_db:
    container_name: "order_services_db"
    image: mongo:4.4.6
    networks:
      - dineflow_network
    ports:
      - "27019:27017"
    env_file:
      - ../dineflow-order-service/.env
    volumes:
      - order_database:/data/db
    restart: on-failure

  # review service --------------------------------------------------
  review_api:
    container_name: "review_services_api"
    build:
      context: ../dineflow-review-service
      dockerfile: ../dineflow-review-service/api.Dockerfile
    expose:
      - 8091
    networks:
      - dineflow_network
    env_file:
      - ../dineflow-review-service/.env
    restart: on-failure

  review_db:
    container_name: "review_services_db"
    image: mongo
    networks:
      - dineflow_network
    ports:
      - "27016:27017"
    env_file:
      - ../dineflow-review-service/.env
    volumes:
      - review_database:/data/db
    restart: on-failure
    
networks:
  dineflow_network:

volumes:
  #menu
  menu_database:
  menu_api:
  #noti
  noti_mongodb:
  noti_rabbitmq:
  #order
  order_database:
  #review
  review_database:
  #user
  user_database:

